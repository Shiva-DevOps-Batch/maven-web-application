pipeline
{

agent any

tools
{
maven "maven3.8.5"
}

triggers {
  pollSCM '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}

stages
{
stage('CheckOut Code')
{
steps
{
SendSlackNotifications('STARTED')
git branch: 'development', credentialsId: '27cbb011-ffd2-4fb6-8984-7c3826a4ffe7', url: 'https://github.com/Shiva-DevOps-Batch/maven-web-application.git'
}
}

stage('Build')
{
steps
{
sh "mvn clean package"
}
}

stage('ExecuteSonarQubeReport') 
{
steps
{
sh "mvn sonar:sonar"
}
}

stage('UploadArtifactsIntoNexus')
{
steps
{
sh "mvn deploy"
}
}

stage('DeployAppIntoTomcatServer')
{
steps
{
sshagent(['5944bcfd-1b7f-4468-a6ee-6476a33a0257']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.127.243.124:/opt/apache-tomcat-9.0.63/webapps"
}
}
}

}//stages closing

post {
  success {
SendSlackNotifications('SUCCESS')
  }
  failure {
SendSlackNotifications('FAILURE')
  }
}

}//pipeline closing

//Below code is to send the Build Notifications to Slack

def SendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}


